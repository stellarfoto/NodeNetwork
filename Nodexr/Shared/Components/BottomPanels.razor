
@inject  RegexReplaceHandler RegexReplaceHandler
@inject  INodeHandler NodeHandler

<div class="bottom-panels" id="bottompanels">
    <div class="viewport search-text panel" id="viewport-searchtext">
        <div class="viewport-title-bar">
            <h1>Search Text</h1>
        </div>
        <div class="search-text-container textarea textbox">
            <SearchTextHighlight Text="@RegexReplaceHandler.SearchText" Matches="@RegexReplaceHandler.GetAllMatches()"/>
            <textarea @bind-value="@RegexReplaceHandler.SearchText" @bind-value:event="oninput" class="search-textarea" />
        </div>
    </div>
    <div class="viewport replace-field panel" id="viewport-replacetext">
        <div class="viewport-title-bar">
            <h1>Replacement Regex</h1>
        </div>
        <textarea class="textarea textbox" @bind-value="@RegexReplaceHandler.ReplacementRegex" @bind-value:event="oninput"/>
    </div>
    <div class="viewport replace-result panel" id="viewport-replaceresult">
        <div class="viewport-title-bar">
            <h1>Replace Result</h1>
        </div>
        <p>@RegexReplaceHandler.GetReplaceResult()</p>
    </div>
</div>

@functions{
    protected override void OnInitialized()
    {
        NodeHandler.OutputChanged += (sender, e) => StateHasChanged();
        RegexReplaceHandler.RegexOptionsChanged += (sender, e) => StateHasChanged();
    }
}